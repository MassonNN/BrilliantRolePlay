/*

	CEO: Roma Omegov
	Gamemode Developer: Folinq Weard
	Gamemode Developer: Marshall_Mathers
	
		fffffffffffffffssssssssssso7mvddzdzzdzddzzdzzdzzzzzzzzddddzzzdzzzzzzzddzzddzznzossssssssfsssfssssffffffffff
		ffffffffffffffffssssssssoo7776569vdkddkdddddddzzdddddddddddddddddddddddddkzdzvxxxosssfsssssssssssffffffffff
		fffffffffffffffsssfssssso386777768668cdkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkdvcvxxmsssssssssfsssffffffffffff
		ffffffffffffffffssfsssso 6778778887888777mzkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkzcvvcvcxxsssssssssfsssfffffffffff
		fffffffffffffffsssssss___777888888888888998770vdkkkkkkkkkkkkkkkkkkkkkkkkknvnvvncvcxcsssssssfssssfffffffffff
		fffffffffffffffssssso __28878888888888888888888878xzkkkkkkokkkkkkkkokkknnnnnnvvvvvxcxsssssfsfssssffffffffff
		ffffffffffffffffssso _1_3888888888888888888888888988870nkkkkkkkokkkkkdvnnnnnnnnvvvvcxxxsssfssssssffffffffff
		ffffffffffffffffsso._1__58888888888888888888898888888888879cdkkkkkkknnnvnnnnnnnvnnvvccxcssffsssssffffffffff
		sssssfssssssssssso _1_1_688888888888888888888888888888888888867mzkdvnnvnnnnnnnnvvvvvvccxcsssssfsfffsssssffs
		sfsssfssssssssssk _1_11_798888888888888888888888888888888888888878mcnnnvnnnnnnnnnvnvvvccxxssossssfffffsssfs
		sssssfssssssssso__1111_2888888888888888888888888888888888888877768xm0xvnnnnnnnnnnnnnnvvccxcsssssfsssssssssf
		ssssffsssssfso __11_11_3988888888888888888888888888888888777777769mmxm0mxvnnnnnnnnnnvvvvvcxxxsssssssssssssf
		sssssssssssso._1_1_11114988888888888888888888888888887777777777769mmmmmmx00xnnnvnnnvvvnvvcccxxsssssssssssss
		ssssfsssssso___111111115988888888888888888888888887777777777777769mmmmmmmmmm00xvnnvnnnnnvvcccxcsssssssssssf
		sssssssssso ___111111117988888888888888888888877777777777777777779mmmmmmmmmmmmmmmcnnnnnnnvvcvccxsssssssssss
		fsssssssso__1_1111111118888888888888888888777777777777777777777769mmmmmmmmmmmmmmmm0mcnnvvnvvvccxxsssssfssss
		ssssfsssk____11111111128888888888888888777777777777777777777777760mmmmmmmmmmmmmmmmmmmmmxnnvvvvccccsssssfssf
		ssssssso_____21111111139888888888887777777777777777777777777777760mmmmmmmmmmmmmmmmmmmmmmmmcnnvvcvxcxsssssss
		ssssssk__21_111111111_59888888887777777777777777777777777777777770mmmmmmmmmmmmmmmmmmmmmmm0mmmcnvvvcxmsssffs
		sssso  __111111111111169888877777777777777777777777777777777777770mmmmmmmmmmmmmmmmmmmmmmmmmmm0mmcvccxxsssss
		sfss _1_1111111111111_88777777777777777777777777777777777777777770mmmmmmmmmmmmmmmmmmmmmmmmmmmmm000mxcxcosss
		sso _11111111111_  ..._3877777777777777777777777777777777777777770mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm09990cxoss
		so_ _     ............... 278777777777777777777777777777777777777mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm09009800s
		o----...........-.....  .  ..168777777777777777777777777777777777mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm0m0009908ss
		s-:---.................        ._57777777777777777777777777777777mmmmmmmmmmmmmmmmmmmmmmmmmmmmm0mm000m71-sss
		sso:---................          .. 36877778766777777777777777777mmmmmmmmmmmmmmm0mmmmmmmmmmmmmmmm93.. .ossf
		ssss-----..............           .. ..17887777777777777777777778mmmmmmmmmmmmmmmmmxm00mmmm0mm94      -osfss
		sssso-:--..............               ....15887777777777777777778mmmmmmmmmmmmmmmm00mmmmmx04     _.  -osssss
		ssssso----.-.-.........                 .   . 4877777777767877778mmmmmmmmmmmmmmmmmmmx04_ _        .osssssss
		sssfssso---............                       ...2887786787677678m0mm0mm0mmmmmmmx05_. ___ _    .. ossssssss
		ssssfssso----...........                     .   . .1687777777668xmmmmmmmm0mx05_.        _     ..osssssssss
		sssfssssss:---..........                   .   .   .  . 5787777790m00m0mxm6_. _  _  __ _ _    ..osssssssssf
		ssssssffssso----........                                 ..388679mmmxm71  __  _________      ..osfssffffssf
		ssssssfssfsso:-.-.......                                  .  .170m71  _       __  ____      ..sssffffffffff
		ssssssssssssso----......                                    . .-:.  _  _____      __       ..ossfffffffffff
		sfsssssssssfsss:-----...                                   .----:-. __   _______         ...ossssffffffffff
		sfsssssssssssssso--.-....  .                            .----:::-:-. __  ______          .ossssssffffffffff
		ssssssssssssssssso---....                            .--:::::::-:-::- _  ______  _   _ .-ossssssfffffffffff
		ssffsssssfssfssfsso:..-...                     . ..----:::::::::-:::-- _  ____  __     .osssssssfffffffffff
		ssfsfssssfssfssssssso-.-..                    ..--::--::::::::::::--::-. _           ..osssfssssfffffffffff
		ffffffssfffsffffssssso--.. .               ..---:::::::::::::::::::::::--_ _        ..ssssssssssfffffffffff
		ffffffffffffffffssssfso-.  . .          ..--::::::::::::::::::::::::::::-._    _    -osssssssssffffffffffff
		fffffffffffffffsssssssso-...  .      ..--::::::::::::::::::::::::::::::::--      ...ossssffssssssffffffffff
		fffffffffffffffsssssssfsso. .  ....---:::::::::::::::::::::::::::::::::::::-    ..ossssssssssfssfffffffffff
		ffffffffffffffffsssssssssso....--::::::::::::::::::::::::::::::::::::::::::::....osssssssssssssssffffffffff
		ffffffffffffffffsfsssfssssso--::::::::::::::::::::::::::::::::::::::::::::::::--ossssssfsssfssssfffffffffff


*/


#define callback:%0(%1) forward %0(%1); public %0(%1)
        new macros, online;
#define FormatedInt(%0,%1,%2,%3) \
                        ((macros = ((%0 % 100) >= 20 ? (%0 % 10) : %0)) == 1 ? (%1) : (2 <= macros <= 4 ? (%2) : (%3)))


// СИСТЕМНЫЕ ИНКЛУДЫ
#include <a_samp>
#include <a_mysql>
#include <sscanf2>
#include <streamer>
#include <mxdate>
#include <a_http>
#include <YSI_Data/y_foreach>
#include "../files/brilliant_core.inc"


// ПОДГРУЖАЕМЫЕ ИНКЛУДЫ
//#include <YSF>
#include <Pawn.CMD>
//#include <mdialog>
//#include <Pawn.RakNet>
#include "../files/mysql.inc"
#include "../files/fly.inc"

#define MAX_BANK_ACCOUNTS 	10
#define MAX_PLAYER_VEHICLES	3
#define MAX_BUSINESSES		3
#define MAX_FRACS	10

#define MAN					1
#define WOMAN				2
#define NOT_SET				0

new ASliv[][] = {"пидр", "сука", "сперм", "хуй", "хуе", "бляд", "пидар", "рак", "яиче", "яиц", "обосра", "гей", "мать", "маму", "клито", "мудак", "мудаче",
                            "KY О", "KУ ОТ", "KУ OT", "ютуб", "http", "youtu", "сын", "понос"};


main()
{
    printf("Ru: %d", strfind("1111приВет", "привет", true));
    printf("En: %d", strfind("1111whuSsup", "whussup", true));
}
//230903dimba00723090dimbakot007230903dimba007230903dimba007

enum PLAYER_Stats {

	PLAYER_ID,
	PLAYER_Name[MAX_PLAYER_NAME],
	PLAYER_IP[17], 
	PLAYER_Sex, 	
	PLAYER_Skin,					
	PLAYER_Money, 		
    PLAYER_AFK,			
    PLAYER_Warn[3],
    PLAYER_Mute,
    PLAYER_Jail,
    PLAYER_WarnTime[3],
	PLAYER_BankMoney[MAX_BANK_ACCOUNTS], 
	PLAYER_Level, 					
	PLAYER_Exp, 					
	PLAYER_MuteTime, 		
	PLAYER_Reputation, 				
	PLAYER_Age, 					
	PLAYER_Admin,					
	PLAYER_Logged,					
	PLAYER_Language,				
    bool:PLAYER_AdminLogged,
    PLAYER_AdminPassword[17],
    PLAYER_Donate,
}; 

new PI[MAX_PLAYERS][PLAYER_Stats];

enum PLAYER_Licenses {

	PLAYER_LIC_CAR_EXP_TIME, 		
	PLAYER_LIC_FLY_EXP_TIME, 		
	PLAYER_LIC_WATER_EXP_TIME, 		
	PLAYER_LIC_GUN_EXP_TIME 		
};

new PL[MAX_PLAYERS][PLAYER_Licenses];


enum PLAYER_Property { 

	PLAYER_House,					
	PLAYER_Vehicle[MAX_PLAYER_VEHICLES],
	PLAYER_Model,					
	PLAYER_Business[MAX_BUSINESSES] 
}; 

new PP[MAX_PLAYERS][PLAYER_Property];



enum PLAYER_Organization { 

	PLAYER_Fraction,				
	PLAYER_Rank,					
	PLAYER_FracWarns,				
	PLAYER_TimeInFrac[MAX_FRACS],	
	PLAYER_FracModel				
};

new PO[MAX_PLAYERS][PLAYER_Organization]; 

//Прочее

new AVeh[MAX_PLAYERS];

new VehicleName[][] ={
    "Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel",
    "Dumper", "Firetruck", "Trashmaster", "Stretch", "Manana", "Infernus",
    "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
    "Esperanto", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection",
    "Hunter", "Premier", "Enforcer", "Securicar", "Banshee", "Predator", "Bus",
    "Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach", "Cabbie",
    "Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral",
    "Squalo", "Seasparrow", "Pizzaboy", "Tram", "Trailer", "Turismo", "Speeder",
    "Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair", "Berkley's RC Van",
    "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale",
    "Oceanic","Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy",
    "Hermes", "Sabre", "Rustler", "ZR-350", "Walton", "Regina", "Comet", "BMX",
    "Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper",
    "Rancher", "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring", "Sandking",
    "Blista Compact", "Police Maverick", "Boxvillde", "Benson", "Mesa", "RC Goblin",
    "Hotring RacerA", "Hotring RacerB", "Bloodring Banger", "Rancher", "Super GT",
    "Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stunt",
    "Tanker", "Roadtrain", "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra",
    "FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck", "Fortune",
    "Cadrona", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer",
    "Remington", "Slamvan", "Blade", "Freight", "Streak", "Vortex", "Vincent",
    "Bullet", "Clover", "Sadler", "Firetruck", "Hustler", "Intruder", "Primo",
    "Cargobob", "Tampa", "Sunrise", "Merit", "Utility", "Nevada", "Yosemite",
    "Windsor", "Monster", "Monster", "Uranus", "Jester", "Sultan", "Stratium",
    "Elegy", "Raindance", "RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito",
    "Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper",
    "Broadway", "Tornado", "AT-400", "DFT-30", "Huntley", "Stafford", "BF-400",
    "News Van", "Tug", "Trailer", "Emperor", "Wayfarer", "Euros", "Hotdog", "Club",
    "Freight Box", "Trailer", "Andromada", "Dodo", "RCCam", "Launch", "Police Car",
    "Police Car", "Police Car", "Police Ranger", "Picador", "S.W.A.T", "Alpha",
    "Phoenix", "Glendale", "Sadler", "Luggage", "Luggage", "Stairs", "Boxville",
    "Tiller", "Utility Trailer"
};

SSCANF:vehiclemodel(model_name[])
{
    if ('0' <= model_name[0] <= '9')
    {
        new model;
    #if !defined sscanf
        for(new i = strlen(model_name)-1; i != -1; i--)
        {
            switch(model_name[i])
            {
                case '0'..'9':
                {
                    continue;
                }
                default:
                {
                    model = -1;
                    break;
                }
            }
        }
        if(model != -1)
        {
            model = strval(model_name);
        }
    #else
        sscanf(model_name, "i", model);
    #endif
        if(400 <= model <= 611)
        {
            return model;
        }
    }
    static const sVehicleModelName[212][] =
    {
        {!"Landstalker"}, {!"Bravura"}, {!"Buffalo"}, {!"Linerunner"}, {!"Perennial"},
        {!"Sentinel"}, {!"Dumper"}, {!"Fire Truck"}, {!"Trashmaster"}, {!"Stretch"},
        {!"Manana"}, {!"Infernus"}, {!"Voodoo"}, {!"Pony"}, {!"Mule"}, {!"Cheetah"},
        {!"Ambulance"}, {!"Leviathan"}, {!"Moonbeam"}, {!"Esperanto"}, {!"Taxi"},
        {!"Washington"}, {!"Bobcat"}, {!"Mr.Whoopee"}, {!"BF Injection"}, {!"Hunter"},
        {!"Premier"}, {!"Enforcer"}, {!"Securicar"}, {!"Banshee"}, {!"Predator"}, {!"Bus"},
        {!"Rhino"}, {!"Barracks"}, {!"Hotknife"}, {!"Article Trailer 1"}, {!"Previon"},
        {!"Coach"}, {!"Cabbie"}, {!"Stallion"}, {!"Rumpo"}, {!"RC Bandit"}, {!"Romero"},
        {!"Packer"}, {!"Monster"}, {!"Admiral"}, {!"Squalo"}, {!"Seasparrow"}, {!"Pizzaboy"},
        {!"Tram"}, {!"Article Trailer 2"}, {!"Turismo"}, {!"Speeder"}, {!"Reefer"},
        {!"Tropic"}, {!"Flatbed"}, {!"Yankee"}, {!"Caddy"}, {!"Solair"}, {!"Berkleys RC Van"},
        {!"Skimmer"}, {!"PCJ-600"}, {!"Faggio"}, {!"Freeway"}, {!"RC Baron"}, {!"RC Raider"},
        {!"Glendale"}, {!"Oceanic"}, {!"Sanchez"}, {!"Sparrow"}, {!"Patriot"}, {!"Quadbike"},
        {!"Coastguard"}, {!"Dinghy"}, {!"Hermes"}, {!"Sabre"}, {!"Rustler"}, {!"ZR-350"},
        {!"Walton"}, {!"Regina"}, {!"Comet"}, {!"BMX"}, {!"Burrito"}, {!"Camper"},
        {!"Marquis"}, {!"Baggage"}, {!"Dozer"}, {!"Maverick"}, {!"News Chopper"},
        {!"Rancher"}, {!"FBI Rancher"}, {!"Virgo"}, {!"Greenwood"}, {!"Jetmax"},
        {!"Hotring Racer"}, {!"Sandking"}, {!"Blista Compact"}, {!"Police Maverick"},
        {!"Boxville"}, {!"Benson"}, {!"Mesa"}, {!"RC Goblin"}, {!"Hotring Racer (A)"},
        {!"Hotring Racer (B)"}, {!"Bloodring Banger"}, {!"Rancher 2"},
        {!"Super GT"}, {!"Elegant"}, {!"Journey"}, {!"Bike"}, {!"Mountain Bike"},
        {!"Beagle"}, {!"Cropduster"}, {!"Stuntplane"}, {!"Tanker"}, {!"Roadtrain"},
        {!"Nebula"}, {!"Majestic"}, {!"Buccaneer"}, {!"Shamal"}, {!"Hydra"}, {!"FCR-900"},
        {!"NRG-500"}, {!"HPV1000"}, {!"Cement Truck"}, {!"Towtruck"}, {!"Fortune"}, {!"Cardona"},
        {!"FBI Truck"}, {!"Willard"}, {!"Forklift"}, {!"Tractor"}, {!"Combine Harvester"},
        {!"Feltzer"}, {!"Remington"}, {!"Slamvan"}, {!"Blade"}, {!"Freight"}, {!"Brown Streak"},
        {!"Vortex"}, {!"Vincent"}, {!"Bullet"}, {!"Clover"}, {!"Sadler"}, {!"Fire Truck 2"},
        {!"Hustler"}, {!"Intruder"}, {!"Primo"}, {!"Cargobob"}, {!"Tampa"}, {!"Sunrise"},
        {!"Merit"}, {!"Utility Van"}, {!"Nevada"}, {!"Yosemite"}, {!"Windsor"}, {!"Monster (A)"},
        {!"Monster (B)"}, {!"Uranus"}, {!"Jester"}, {!"Sultan"}, {!"Stratum"}, {!"Elegy"},
        {!"Raindance"}, {!"RC Tiger"}, {!"Flash"}, {!"Tahoma"}, {!"Savanna"}, {!"Bandito"},
        {!"Freight"}, {!"Brown Streak"}, {!"Kart"}, {!"Mower"}, {!"Dune"}, {!"Sweeper"},
        {!"Broadway"}, {!"Tornado"}, {!"AT-400"}, {!"DFT-30"}, {!"Huntley"}, {!"Stafford"},
        {!"BF-400"}, {!"Newsvan"}, {!"Tug"}, {!"Petrol Truck"}, {!"Emperor"}, {!"Wayfarer"},
        {!"Euros"}, {!"Hotdog"}, {!"Club"}, {!"Freight Box"}, {!"Article Trailer 3"}, {!"Andromada"},
        {!"Dodo"}, {!"RC Cam"}, {!"Launch"}, {!"Police (LSPD)"}, {!"Police (SFPD)"}, {!"Police (LVPD)"},
        {!"Ranger"}, {!"Picador"}, {!"S.W.A.T."}, {!"Alpha"}, {!"Phoenix"}, {!"Glendale 2"},
        {!"Sadler 2"}, {!"Baggage Box A"}, {!"Baggage Box B"}, {!"Stairs Trailer"}, {!"Boxville 2"},
        {!"Farm Trailer"}, {!"Utility Trailer"}
    };
    for(new i = 0; i < sizeof(sVehicleModelName); i++)
    {
        if(!strcmp(sVehicleModelName[i], model_name, true))
            return i+400;
    }

    for(new i = 0; i < sizeof(sVehicleModelName); i++)
    {
        if(strfind(sVehicleModelName[i], model_name, true) != -1)
            return i+400;
    }
    return INVALID_VEHICLE_ID;
}

#include "../files/API.inc"

public OnGameModeInit()
{
    SetGameModeText("BRP");
    mysql_tquery(dbHandle, "SET NAMES cp1251");
    SendRconCommand(!"hostname Brilliant RolePlay | Test");
    SendRconCommand(!"mapname Russia");
    SendRconCommand(!"weburl brilliant-games.ru");
    SendRconCommand(!"language Russian");
    #include "../files/mapping/Kvartira.inc"
    mysql_log();
    print(SYSTEM_HI_RU);
    SetTimer("SecondUpdate", 1000, true);
}

static const PlayerMenu[] = 
    !"{FFFFFF}1. Статистика персонажа\n\
    {FFFFFF}2. Паспорт\n\
    {FFFFFF}3. {FF0000}Характеристики\n\
    {FFFFFF}4. {FF0000}Настройки\n\
    {FFFFFF}5. Смена никнейма\n\
    {FFFFFF}6. Донат\n\
    {FFFFFF}7. {FF0000}Безопасность\n\
    {FFFFFF}8. {FF0000}Промокод";

static const ZBTNames[][] = {

    {"Folinq_Weard"},
    {"Roma_Omegov"},
    {"Marshall_Mathers"},
    {"Bogdan_Swarovski"},
    {"Sergey_Sanchez"},
    {"Rich_Anderson"},
    {"Denis_Zona"},
    {"Igor_Belov"}
};

static const TestersNames[][] = {

    {"Bogdan_Swarovski"},
    {"Sergey_Sanchez"},
    {"Rich_Anderson"},
    {"Denis_Zona"},
    {"Igor_Belov"}
};

static const AdminLevelName[][] = {

    {"{ECFC03}Мл. Модератор"},
    {"{FCD303}Модератор"},
    {"{FC8C03}Мл. Администратор"},
    {"{FC3D03}Администратор"},
    {"{FC033D}Ст. Администратор"},
    {"{8803FC}Спец. Администратор"},
    {"{FC03E7}Основатель"},
    {"Разработчик"}
};

static const PlayerChangeNick[] = 
        "{82e63c}Вы можете изменить свой никнейм на любой другой RolePlay никнейм\n\
        {FFFFFF}Пример: {63c71e}Ilya_Ivanov, Sergey_Petrov, Alexey_Popov\n\n\
        {db092c}Внимание: {09db79}смена никнейма стоит 49 Brilliant-Лавэ\
        ";

static const AdminCommands[][] = {
    {""COLOR_YELLOW_S"1. Уровень: /ahelp , /alogin , /admins , /fly , /stopfly , /mute , /kick\n"},
    {"2. Уровень: /spawn , /warn , /unmute\n"},
    {"3. Уровень: /setskin , /ban\n"},
    {"4. Уровень: /veh , /delveh , /fixveh , /unban\n"},
    {"5. Уровень: /tune , /atune , /paintjob\n"},
    {"6. Уровень: /\n"},
    {"7. Уровень: /\n"},
    {"8. Уровень: /makeadmin\n"}
};

public OnPlayerSpawn(playerid)
{
    ResetPlayerMoney(playerid);
    GivePlayerMoney(playerid, PI[playerid][PLAYER_Money]);
    FreezePlayer(playerid, 2300);
    switch(random(5))
    {
        case 0: SetPlayerPos(playerid, 2507.1040, -2121.2522, 23.4558), SetPlayerFacingAngle(playerid, 180);
        case 1: SetPlayerPos(playerid, 2507.0884, -2124.2639, 23.4558), SetPlayerFacingAngle(playerid, 180);
        case 2: SetPlayerPos(playerid, 2506.5117, -2130.1980, 23.4558), SetPlayerFacingAngle(playerid, 0.0);
        case 3: SetPlayerPos(playerid, 2511.4604, -2120.7002, 23.4558), SetPlayerFacingAngle(playerid, 180);
        case 4: SetPlayerPos(playerid, 2511.4373, -2123.5974, 23.4558), SetPlayerFacingAngle(playerid, 180);
    }
    SetPlayerSkin(playerid, PI[playerid][PLAYER_Skin]);
    SetCameraBehindPlayer(playerid);
    return 1;
}

public OnPlayerUpdate(playerid)
{
    PI[playerid][PLAYER_AFK] = 0;
    return 1;
}

callback:SecondUpdate()
{
    new string[30];
    foreach(new i: Player)
    {
        if(PI[i][PLAYER_Mute] == 1) SendClientMessage(i, COLOR_HAKI_L, !"Бан чата окончен. Просим Вас больше не нарушать правила сервера!");
        PI[i][PLAYER_AFK]++;
        if(PI[i][PLAYER_Mute] > 0) PI[i][PLAYER_Mute]--;
        if(PI[i][PLAYER_Jail] > 0) PI[i][PLAYER_Jail]--;
        if(PI[i][PLAYER_AFK] > 3)
        {
            format(string, sizeof(string), "<AFK>: %d %s", PI[i][PLAYER_AFK], FormatedInt(PI[i][PLAYER_AFK], "секунду", "секунды", "секунд"));
            SetPlayerChatBubble(i, string, 0xc7e03aFF, 10.0, 950);
        }
    }
    return 1;
}

public OnPlayerText(playerid, text[])
{
    if(!PI[playerid][PLAYER_Logged]) return 0;
    if(PI[playerid][PLAYER_Admin] < 5)
	{
	    if(gettime() < GetPVarInt(playerid, "CMD"))
	    {
	        SendClientMessage(playerid, COLOR_ADM_L, !"Не флуди!");
	        return 0;
	    }
	    SetPVarInt(playerid, "CMD", gettime() + 1);
    }
	new string[144];
    if(PI[playerid][PLAYER_Mute])
    {
        format(string, sizeof(string), "У Вас бан чата! Осталось: %d %s", PI[playerid][PLAYER_Mute] / 60, FormatedInt(PI[playerid][PLAYER_Mute] / 60, "минута", "минуты", "минут"));
        SendClientMessage(playerid, 0xd11d3bFF, string);
        return 0;
	}
    if(strlen(text) < 113)
	{
	    format(string, sizeof(string), "%s[%d]: %s", PI[playerid][PLAYER_Name], playerid, text);
	    ProxDetector(20.0, playerid, string, COLOR_GRAY_L, COLOR_GRAY_L, COLOR_GRAY_L, COLOR_GRAY_L, COLOR_GRAY_L);
	    SetPlayerChatBubble(playerid, text, COLOR_WHITE_L, 20, 7500);
	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	    {
			ApplyAnimation(playerid, "PED", "IDLE_chat", 4.1, 0, 1, 1, 1, 1);
			SetTimerEx("StopAnim", 3000, false, "d", playerid);
		}
	}
 	else
	{
		return 0;
	}
    return 0;
}

callback:StopAnim(playerid)
{
    ApplyAnimation(playerid, "PED", "facanger", 4.1, 0, 1, 1, 1, 1);
    return 1;
}

new TempPlayerPassword[MAX_PLAYERS][33];

enum 
{
	DIALOG_REG,
	DIALOG_LOG,
	DIALOG_SEX,
    DIALOG_ALOGIN,
    DIALOG_NULL,
    DIALOG_AHELP,
    DIALOG_MM,
    DIALOG_CHANGENICK, 

    //CAR
    DIALOG_TUNE,
    DIALOG_SPOILERS,
    DIALOG_HOOD,
    DIALOG_ROOF,
    DIALOG_SIDESKIRT,
    DIALOG_NITRO,
    DIALOG_LAMPS,
    DIALOG_EXHAUST,
    DIALOG_WHEELS,
    DIALOG_FRONTBUMPER,
    //
}

static const TuneName[] = {
    "Спойлер\n\
    Капот\n\
    Крыша\n\
    Боковая панель\n\
    Нитро\n\
    (НЕ СДЕЛАНО)Фары\n\
    (НЕ СДЕЛАНО)Выхлопная труба\n\
    (НЕ СДЕЛАНО)Колёса\n\
    (НЕ СДЕЛАНО)Передний бампер"
};

enum e_TUNE_IDs
{
    TUNING_Name[35],
    TUNING_ID,
}

static const a_TUNE_SPOILERS[][e_TUNE_IDs] = {
    { "Спойлер Проффесионал\n", 1000 },
    { "Спойлер Победа\n", 1001 },
    { "Спойлер Драг\n", 1002 },
    { "Спойлер Альфа", 1003 }
};

static const a_TUNE_HOOD[][e_TUNE_IDs] = {
    { "Капот 1\n", 1004 },
    { "Капот 2\n", 1005 },
    { "Капот 3\n", 1011 },
    { "Капот 4", 1012 }
};

static const a_TUNE_ROOF[][e_TUNE_IDs] = {
    { "Крыша 1\n", 1006 },
    { "Крыша 2\n", 1032 },
    { "Крыша 3\n", 1033 },
    { "Крыша 4", 1038 }
};

static const a_TUNE_SIDESKIRT[][e_TUNE_IDs] = {
    { "Бок 1\n", 1007 },
    { "Бок 2\n", 1017 },
    { "Бок 3\n", 1026 },
    { "Бок 4", 1027 }
};

static const a_TUNE_NITRO[][e_TUNE_IDs] = {
    { "x2 нитро\n", 1009 },
    { "x5 нитро\n", 1009 },
    { "x10 нитро", 1010 }
};

public OnPlayerDisconnect(playerid, reason)
{
    new str[100];
    format(str, sizeof(str), "UPDATE `accounts` SET `mute` = '%d' WHERE `id` = '%d'", PI[playerid][PLAYER_Mute], PI[playerid][PLAYER_ID]);
    mysql_tquery(dbHandle, str);
    DestroyVehicle(AVeh[playerid]);
    TempPlayerPassword[playerid][0] = EOS;
    PI[playerid][PLAYER_ID] = 0;
    PI[playerid][PLAYER_Name] = EOS;
    PI[playerid][PLAYER_IP] = EOS;
    PI[playerid][PLAYER_Sex] = 0;
    PI[playerid][PLAYER_Skin] = 0;
    PI[playerid][PLAYER_Money] = 0;
    PI[playerid][PLAYER_BankMoney] = 0;
    PI[playerid][PLAYER_Level] = 0;
    PI[playerid][PLAYER_Exp] = 0;
    PI[playerid][PLAYER_MuteTime] = 0;
    PI[playerid][PLAYER_Warn][0] = 0;
    PI[playerid][PLAYER_Warn][1] = 0;
    PI[playerid][PLAYER_Warn][2] = 0;
    PI[playerid][PLAYER_WarnTime][0] = 0;
    PI[playerid][PLAYER_WarnTime][1] = 0;
    PI[playerid][PLAYER_WarnTime][2] = 0;
    PI[playerid][PLAYER_Reputation] = 0;
    PI[playerid][PLAYER_Age] = 0;
    PI[playerid][PLAYER_Admin] = 0;
    PI[playerid][PLAYER_AdminLogged] = false;
    PI[playerid][PLAYER_AdminPassword] = EOS;
    PI[playerid][PLAYER_Logged] = false;
    PI[playerid][PLAYER_Language] = 0;
    online--;
    return 1;
}                        

public OnPlayerConnect(playerid)
{
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    for(new i; i < sizeof(ZBTNames); i++)
    {
        if(!strcmp(name, ZBTNames[i])) goto JumpToZBT;
    }
    Kick(playerid);
    JumpToZBT:if(!IsRPNick(name))
    {
        SendClientMessage(playerid, 0xFFFFFFFF, !"Придумайте RP никнейм");
        return GKick(playerid);
    }
    for(new i; i < 20; i++)
    {
        SendClientMessage(playerid, -1, " ");
    }
    online++;
    return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    SetPlayerColor(playerid, 0xFFFFFFFF);
   	GetPlayerName(playerid, PI[playerid][PLAYER_Name], MAX_PLAYER_NAME);
	TogglePlayerSpectating(playerid, 1);
	new string[120];
	if(PI[playerid][PLAYER_Logged] == 0)
	{
 		GetPlayerIp(playerid, PI[playerid][PLAYER_IP], 17);
	    format(string, sizeof(string), "SELECT * FROM `accounts` WHERE `name` = '%s'", PI[playerid][PLAYER_Name]);
	    mysql_tquery(dbHandle, string, "CheckAcc", "d", playerid);
        SendClientMessage(playerid, 0x29E395FF, !"Добро пожаловать на сервер {FFFFFF}Brilliant Role Play");
        format(string, sizeof(string), "Текущий онлайн: {FFFFFF}%d {29E395}%s", online, FormatedInt(online, "человек", "человека", "человек"));
        SendClientMessage(playerid, 0x29E395FF, string);
	}
	return 1;
}

callback:CheckAcc(playerid)
{
	new rows = cache_num_rows();
	if(!rows)
	{
    	ShowPlayerDialog(playerid, DIALOG_REG, DIALOG_STYLE_INPUT, !"Регистрация", !"{FFFFFF}Введите новый пароль для своего игрового аккаунта\nВыбирайте пароль тщательно, дабы Вас не взломали\n\
   		Примечание: Пароль может быть от 6 до 32-х символов либого регистра на английском языке включая цифры", !"Далее", !"Отмена");
	}
	else
	{
		cache_get_value_name(0, "password", TempPlayerPassword[playerid]);
 	    ShowPlayerDialog(playerid, DIALOG_LOG, DIALOG_STYLE_PASSWORD, !"Авторизация", !"{FFFFFF}Введите пароль от своего аккаунта", !"Далее", !"Отмена");
	}
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	switch(dialogid)
	{
	    case DIALOG_REG:
	    {
	    	if(!response) return Kick(playerid);
	        if(strlen(inputtext) < 6 || strlen(inputtext) > 32) return ShowPlayerDialog(playerid, DIALOG_REG, DIALOG_STYLE_INPUT, !"Регистрация", !"{FFFFFF}Введите новый пароль для своего игрового аккаунта\nВыбирайте пароль тщательно, дабы Вас не взломали\n\
       		Примечание: Пароль может быть от 6 до 32-х символов либого регистра на английском языке включая цифры", !"Далее", !"Отмена");
	        for(new i; i < strlen(inputtext); i++)
	        {
	            switch(inputtext[i])
	            {
	                case '0'..'9', 'a'..'z', 'A'..'Z': continue;
	                default: return ShowPlayerDialog(playerid, DIALOG_REG, DIALOG_STYLE_INPUT, !"Регистрация", !"{FFFFFF}Введите новый пароль для своего игрового аккаунта\nВыбирайте пароль тщательно, дабы Вас не взломали\n\
       				Примечание: Пароль может быть от 6 до 32-х символов либого регистра на английском языке включая цифры", !"Далее", !"Отмена");
	            }
	        }
	        format(TempPlayerPassword[playerid], 32, "%s", inputtext);
	        ShowPlayerDialog(playerid, DIALOG_SEX, DIALOG_STYLE_MSGBOX, !"Регистрация", !"Выберите пол для Вашего игрового персонажа", !"Мужской", !"Женский");
		}
		case DIALOG_SEX:
		{
		    	if(response) PI[playerid][PLAYER_Sex] = 1;
		    	else PI[playerid][PLAYER_Sex] = 2;
		    	new string[150];
                format(string, sizeof(string), "SELECT `name` FROM `accounts` WHERE `name` = '%s'", PI[playerid][PLAYER_Name]); 
                mysql_tquery(dbHandle, string, "CreateAcc", "ds", playerid, TempPlayerPassword[playerid]);
		}
    	case DIALOG_LOG:
    	{
        	if(!response) return Kick(playerid);
        	if(strlen(inputtext) < 6 || strlen(inputtext) > 32) return ShowPlayerDialog(playerid, DIALOG_LOG, DIALOG_STYLE_PASSWORD, !"Авторизация", !"{FFFFFF}Введите пароль от своего аккаунта", !"Далее", !"Отмена");
        	for(new i; i < strlen(inputtext); i++)
        	{
        		switch(inputtext[i])
        		{
           			case '0'..'9', 'a'..'z', 'A'..'Z': continue;
           			default: return ShowPlayerDialog(playerid, DIALOG_LOG, DIALOG_STYLE_PASSWORD, !"Авторизация", !"{FFFFFF}Введите пароль от своего аккаунта", !"Далее", !"Отмена");
        		}
        	}
       		if(!strcmp(TempPlayerPassword[playerid], inputtext))
       		{
				new qString[90];
        		format(qString, sizeof(qString), "SELECT * FROM `accounts` WHERE `name` = '%s'", PI[playerid][PLAYER_Name]);	            			
				mysql_tquery(dbHandle, qString, "LoadAcc", "d", playerid);
        	}
        	else
        	{
				if(GetPVarInt(playerid, "BadAttempt") >= 3) return ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, !"Отключен", !"{FFFFFF}Вы были отключны от сервера из-за неоднократного ввода неправильного пароля\
				", !"Окей", ""), GKick(playerid);
        		new string[55];
        		format(string, sizeof(string), "Неверный пароль! Осталось %d попытки", 3 - GetPVarInt(playerid, "BadAttempt"));
     			if(GetPVarInt(playerid, "BadAttempt") == 2)
         		{
         	    	ShowPlayerDialog(playerid, DIALOG_LOG, DIALOG_STYLE_PASSWORD, !"Авторизация", !"{FFFFFF}Введите пароль от своего аккаунта", !"Далее", !"Отмена");
         	    	SendClientMessage(playerid, 0xFF0000FF, !"Неверный пароль! Осталась последняя попытка");

				}
				else
				{
                	ShowPlayerDialog(playerid, DIALOG_LOG, DIALOG_STYLE_PASSWORD, !"Авторизация", !"{FFFFFF}Введите пароль от своего аккаунта", !"Далее", !"Отмена"); 
                	SendClientMessage(playerid, 0xFF0000FF, string);
				}
            	SetPVarInt(playerid, "BadAttempt", GetPVarInt(playerid, "BadAttempt") + 1);
   			}
  		}
        case DIALOG_ALOGIN:
        {
            if(!response) return 0;
            if(strlen(PI[playerid][PLAYER_AdminPassword]) > 16) return SendClientMessage(playerid, COLOR_WHITE_L, !"Пароль должен быть не длиннее 16-ти символов");
            new string[125];
            if(strlen(PI[playerid][PLAYER_AdminPassword]) < 4) 
            {
                if(strlen(inputtext) < 4) return SendClientMessage(playerid, COLOR_WHITE_L, !"Пароль должен быть не короче 4-х символов");
                PI[playerid][PLAYER_AdminPassword] = EOS;
                strcat(PI[playerid][PLAYER_AdminPassword], inputtext);
                PI[playerid][PLAYER_AdminLogged] = true;
                format(string, sizeof(string), "<ALOGIN> %s[%d] вошел", PI[playerid][PLAYER_Name], playerid);
                SendAdmin(string, COLOR_HAKI_L);
                format(string, sizeof(string), "UPDATE `accounts` SET `adminspass` = '%s' WHERE `id` = '%d'", PI[playerid][PLAYER_AdminPassword], PI[playerid][PLAYER_ID]);
                mysql_tquery(dbHandle, string);
            }
            else
            {
                if(strlen(inputtext) < 4) return SendClientMessage(playerid, COLOR_WHITE_L, !"Пароль должен быть не короче 4-х символов");
                if(strcmp(PI[playerid][PLAYER_AdminPassword], inputtext))
                {
                    format(string, sizeof(string), "<ALOGIN> %s[%d] не смог войти и был кикнут", PI[playerid][PLAYER_Name], playerid);
                    SendAdmin(string, COLOR_RED_L);
                    GKick(playerid);
                    return 0;
                }
                PI[playerid][PLAYER_AdminLogged] = true;
                format(string, sizeof(string), "<ALOGIN> %s[%d] вошел", PI[playerid][PLAYER_Name], playerid);
                SendAdmin(string, COLOR_HAKI_L);
            }
            SendClientMessage(playerid, COLOR_GREEN_L, !"Используйте /ahelp для просмотра списка всех доступных команд");
            return 1;
        }
        case DIALOG_AHELP:
        {
            if(!response) return 0;
            new dialog[600];
            switch(listitem)
            {
                case 0: 
                {
                    for(new i ; i < PI[playerid][PLAYER_Admin]; i++)
                    {
                        strcat(dialog, AdminCommands[i]);
                    }
                    ShowPlayerDialog(playerid, DIALOG_NULL, DIALOG_STYLE_MSGBOX, !"Команды", dialog, !"Ок", "");
                }
            }
        }
        case DIALOG_TUNE:
        {
            if(!response) return 0;
            new dialog[130];
            switch(listitem)
            {
                case 0: // СПОЙЛЕРЫ
                {
                    for(new i; i < sizeof(a_TUNE_SPOILERS); i++)
                    {
                        strcat(dialog, a_TUNE_SPOILERS[i][TUNING_Name]);
                    }
                    ShowPlayerDialog(playerid, DIALOG_SPOILERS, DIALOG_STYLE_LIST, !"Тюнинг", dialog, !"Выбрать", !"ВЫйти");
                }
                case 1: // КАПОТ
                {
                    for(new i; i < sizeof(a_TUNE_HOOD); i++)
                    {
                        strcat(dialog, a_TUNE_HOOD[i][TUNING_Name]);
                    }
                    ShowPlayerDialog(playerid, DIALOG_HOOD, DIALOG_STYLE_LIST, !"Тюнинг", dialog, !"Выбрать", !"ВЫйти");
                }
                case 2: // КРЫША
                {
                    for(new i; i < sizeof(a_TUNE_ROOF); i++)
                    {
                        strcat(dialog, a_TUNE_ROOF[i][TUNING_Name]);
                    }
                    ShowPlayerDialog(playerid, DIALOG_ROOF, DIALOG_STYLE_LIST, !"Тюнинг", dialog, !"Выбрать", !"ВЫйти");
                }
                case 3: // БОК
                {
                    for(new i; i < sizeof(a_TUNE_SIDESKIRT); i++)
                    {
                        strcat(dialog, a_TUNE_SIDESKIRT[i][TUNING_Name]);
                    }
                    ShowPlayerDialog(playerid, DIALOG_SIDESKIRT, DIALOG_STYLE_LIST, !"Тюнинг", dialog, !"Выбрать", !"ВЫйти");
                }
                case 4: // НИТРО
                {
                    for(new i; i < sizeof(a_TUNE_NITRO); i++)
                    {
                        strcat(dialog, a_TUNE_NITRO[i][TUNING_Name]);
                    }
                    ShowPlayerDialog(playerid, DIALOG_NITRO, DIALOG_STYLE_LIST, !"Тюнинг", dialog, !"Выбрать", !"ВЫйти");
                }
            }
        }
        case DIALOG_SPOILERS:
        {
            if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE_L, !"Можно использовать только в машине");
            AddVehicleComponent(GetPlayerVehicleID(playerid), a_TUNE_SPOILERS[listitem][TUNING_ID]);
        }
        case DIALOG_HOOD:
        {
            if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE_L, !"Можно использовать только в машине");
            AddVehicleComponent(GetPlayerVehicleID(playerid), a_TUNE_HOOD[listitem][TUNING_ID]);
        }
        case DIALOG_ROOF:
        {
            if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE_L, !"Можно использовать только в машине");
            AddVehicleComponent(GetPlayerVehicleID(playerid), a_TUNE_ROOF[listitem][TUNING_ID]);
        }
        case DIALOG_SIDESKIRT:
        {
            if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE_L, !"Можно использовать только в машине");
            AddVehicleComponent(GetPlayerVehicleID(playerid), a_TUNE_SIDESKIRT[listitem][TUNING_ID]);
        }
        case DIALOG_NITRO:
        {
            if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE_L, !"Можно использовать только в машине");
            AddVehicleComponent(GetPlayerVehicleID(playerid), a_TUNE_NITRO[listitem][TUNING_ID]);
        }
        case DIALOG_MM:
        {
            if(!response) return 0;
            new dialog[400];
            switch(listitem)
            {
                case 0: callcmd::stats(playerid);
                case 1:
                {
                    new FName[24], SName[24];
                    sscanf(PI[playerid][PLAYER_Name], "p<_>s[24]s[24]", FName, SName);
                    format(dialog, sizeof(dialog), 
                        "{FFFFFF}Имя: %s\n\
                        Фамилия: %s\n\
                        Город: Бриллиант Сити", FName, SName);
                    ShowPlayerDialog(playerid, DIALOG_NULL, DIALOG_STYLE_MSGBOX, !"{FCBA03}Паспорт", dialog, !"Ок", "");
                }
                case 4:
                {
                    ShowPlayerDialog(playerid, DIALOG_CHANGENICK, DIALOG_STYLE_INPUT, !"{FCBA03}Смена никнейма", PlayerChangeNick, !"Сменить", "Отмена");
                }
                case 5:
                {
                    format(dialog, sizeof(dialog), 
                       "Баланс: %d %s", PI[playerid][PLAYER_Donate], FormatedInt(PI[playerid][PLAYER_Donate], "Brilliant Cash", "Brilliant Cash`s", "Brilliant Cash`s"));
                    ShowPlayerDialog(playerid, DIALOG_NULL, DIALOG_STYLE_MSGBOX, !"{FCBA03}Донат", dialog, !"Ок", "");
                }
            }
        }
        case DIALOG_CHANGENICK:
        {
            if(!response) return 0;
            //if(PI[playerid][PLAYER_Admin]) return SendClientMessage(playerid, COLOR_WHITE_L, !"Администрации нельзя изменять никнеймы");
            if(strlen(inputtext) < 2 || strlen(inputtext) > 24) return SendClientMessage(playerid, COLOR_WHITE_L, !"Укажите RolePlay никнейм");
            if(!IsRPNick(inputtext)) return SendClientMessage(playerid, COLOR_WHITE_L, !"Укажите RolePlay никнейм");
            new string[144];
            format(string, sizeof(string), "SELECT `name` FROM `accounts` WHERE `name` = '%s'", inputtext);
            mysql_tquery(dbHandle, string, "OnPlayerChangeNick", "ds", playerid, inputtext);
        }
	}
 	return 1;
}

callback:OnPlayerChangeNick(playerid, name[])
{
    new rows = cache_num_rows(), string[144];
    if(rows) return SendClientMessage(playerid, -1, !"Такой никнейм уже занят");
    if(PI[playerid][PLAYER_Donate] < 49) return SendClientMessage(playerid, COLOR_WHITE_L, !"Не хватает Brilliant Cash");
    TakeDonate(playerid, 49);
    format(string, sizeof(string), "UPDATE `accounts` SET `name` = '%s' WHERE `id` = '%d'", name, PI[playerid][PLAYER_ID]);
    mysql_tquery(dbHandle, string);
    format(string, sizeof(string), "%s теперь известен как %s", PI[playerid][PLAYER_Name], name);
    SendClientMessageToAll(0xfce703FF, string);
    return GKick(playerid), SendClientMessage(playerid, -1, !"Войдите под новым никнеймом");
}

public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
    if(result == -1) return UnknownCommand(playerid);
    return 1;
}

public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
    if(!PI[playerid][PLAYER_Logged]) return 0;
    if(PI[playerid][PLAYER_Admin] < 5)
    {
        if(gettime() < GetPVarInt(playerid, "CMD"))
        {
            SendClientMessage(playerid, COLOR_ADM_L, !"Не флуди!");
            return 0;
        }
        SetPVarInt(playerid, "CMD", gettime() + 1);
    }
    return 1;
}

//////////////////////////////////////////////////////////[ОБЩИЕ КОМАНДЫ]////////////////////////////////////////////////////////////////////////////////////

cmd:me(playerid, params[])
{
    if(strlen(params[0]) < 1) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /me [Действие]");
    if(strlen(params[0]) > 100) return SendClientMessage(playerid, COLOR_WHITE_L, !"Слишком длинный текст");
    new string[125];
    format(string, sizeof(string), "%s %s", PI[playerid][PLAYER_Name], params[0]);
    ProxDetector(20.0, playerid, string, COLOR_PURPLE_L, COLOR_PURPLE_L, COLOR_PURPLE_L, COLOR_PURPLE_L, COLOR_PURPLE_L);
    SetPlayerChatBubble(playerid, string, COLOR_PURPLE_L, 20, 7500);
    return 1;
}

cmd:stats(playerid)
{
    new str[200];
    format(str, sizeof(str), 
        "{FFFFFF}Никнейм: %s\n\
        Варны: %d"
        , PI[playerid][PLAYER_Name], PI[playerid][PLAYER_Warn]);
    if(PI[playerid][PLAYER_Warn] > 0) 
    {
        new PreFormat[45], end = (PI[playerid][PLAYER_WarnTime] - gettime()) / 86400;
        format(PreFormat, sizeof(PreFormat), "{FFFFFF}\nОсталось до конца варнов: %d %s", end, FormatedInt(end, "день", "дня", "дней"));
        strcat(str, PreFormat);
    }
    ShowPlayerDialog(playerid, DIALOG_NULL, DIALOG_STYLE_MSGBOX, !"Статистика", str, !"Ок", "");
    return 1;
}

cmd:mm(playerid)
{
    ShowPlayerDialog(playerid, DIALOG_MM, DIALOG_STYLE_LIST, "{FCBA03}Меню персонажа", PlayerMenu, "Выбрать", "Закрыть");
    return 1;
}

cmd:do(playerid, params[])
{
    if(strlen(params[0]) < 1) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /do [Описание действия/ситуации]");
    if(strlen(params[0]) > 100) return SendClientMessage(playerid, COLOR_WHITE_L, !"Слишком длинный текст");
    new string[125];
    format(string, sizeof(string), "%s ( %s )", params[0], PI[playerid][PLAYER_Name]);
    ProxDetector(20.0, playerid, string, COLOR_PURPLE_L, COLOR_PURPLE_L, COLOR_PURPLE_L, COLOR_PURPLE_L, COLOR_PURPLE_L);
    SetPlayerChatBubble(playerid, string, COLOR_PURPLE_L, 20, 7500);
    return 1;
}

cmd:try(playerid, params[])
{
    if(strlen(params[0]) < 1) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /try [Текст]");
    if(strlen(params[0]) > 100) return SendClientMessage(playerid, COLOR_WHITE_L, !"Текст лишком большой!");
    new string[125];
    new r = random(2);
    if(r == 0) format(string, sizeof(string), "%s %s {34eb3a}| Удачно", PI[playerid][PLAYER_Name], params[0]);
    else format(string, sizeof(string), "%s %s {d61313}| Неудачно", PI[playerid][PLAYER_Name], params[0]);
    ProxDetector(20.0, playerid, string, COLOR_PURPLE_L, COLOR_PURPLE_L, COLOR_PURPLE_L, COLOR_PURPLE_L, COLOR_PURPLE_L);
    SetPlayerChatBubble(playerid, string, COLOR_PURPLE_L, 20, 7500);
    return 1;
}

cmd:todo(playerid, params[])
{
    if(strlen(params[0]) > 100) return SendClientMessage(playerid, COLOR_WHITE_L, !"Текст лишком большой!");
    new a[90], b[90], string[144];
    if(strlen(params[0]) < 3 || sscanf(params, "p<*>s[90]s[90]", a, b)) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /todo [Текст*Действие]");
    if(PI[playerid][PLAYER_Sex] == 0) format(string, sizeof(string), "\"%s\", сказал %s, %s", a, PI[playerid][PLAYER_Name], b);
    else format(string, sizeof(string), "\"%s\", сказала %s, %s", a, PI[playerid][PLAYER_Name], b);
    ProxDetector(20.0, playerid, string, COLOR_PURPLE_L, COLOR_PURPLE_L, COLOR_PURPLE_L, COLOR_PURPLE_L, COLOR_PURPLE_L);
    SetPlayerChatBubble(playerid, string, COLOR_PURPLE_L, 20, 7500);
    return 1;
}

cmd:report(playerid, params[])
{
    if(GetPVarInt(playerid, "Report") > gettime()) return SendClientMessage(playerid, COLOR_WHITE_L, !"Писать в report можно лишь раз в минуту");
    if(strlen(params) < 2) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /report [Текст]");
    if(strlen(params) > 115) return SendClientMessage(playerid, COLOR_WHITE_L, !"Текст слишком длинный!");
    SetPVarInt(playerid, "Report", gettime() + 60);
    new str[160];
    format(str, sizeof(str), "[REP] {3fed39}%s: %s", PI[playerid][PLAYER_Name], params);
    SendAdmin(str, 0xf5f51bFF);
    return 1;
}

///////////////////////////////////////////////////[КОМАНДЫ ДЛЯ АДМИНИСТРАТОРА 1+ УРОВНЯ]////////////////////////////////////////////////////////////////////

cmd:ahelp(playerid)
{
    if(PI[playerid][PLAYER_Admin] < 1) return UnknownCommand(playerid);
    ShowPlayerDialog(playerid, DIALOG_AHELP, DIALOG_NULL, !"Помощь", !"{FFFFFF}Команды", !"Далее", !"Отмена");
    return 1;
}

cmd:a(playerid, params[])
{
    if(PI[playerid][PLAYER_Admin] < 1) return UnknownCommand(playerid);
    if(strlen(params) < 1) return SendClientMessage(playerid, COLOR_WHITE_L, !"Сообщение слишком короткое!");
    if(strlen(params) > 130) return SendClientMessage(playerid, COLOR_WHITE_L, !"Сообщение слишком длинное!");
    new string[170];
    format(string, sizeof(string), "<ADM> {89ba3a}%s[%d]: %s", PI[playerid][PLAYER_Name], playerid, params);
    SendAdmin(string, COLOR_HAKI_L);
    return 1;
}

cmd:alogin(playerid)
{
    if(PI[playerid][PLAYER_Admin] < 1) return UnknownCommand(playerid);
    if(PI[playerid][PLAYER_AdminLogged] == true) return SendClientMessage(playerid, COLOR_WHITE_L, !"Вы уже вошли в систему администрирования");
    if(strlen(PI[playerid][PLAYER_AdminPassword]) < 4) ShowPlayerDialog(playerid, DIALOG_ALOGIN, DIALOG_STYLE_INPUT, !"Вход в систему", !""COLOR_WHITE_S"Придумайте пароль для админ-панели", !"Войти", !"Отмена");
    else ShowPlayerDialog(playerid, DIALOG_ALOGIN, DIALOG_STYLE_INPUT, !"Вход в систему", !""COLOR_WHITE_S"Введите свой пароль от админ-панели", !"Войти", !"Отмена");
    return 1;
}

cmd:admins(playerid)
{
    if(PI[playerid][PLAYER_Admin] < 1) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    new admins[70] = "{0366FC}Администрация онлайн:";
    SendClientMessage(playerid, COLOR_WHITE_L, admins);
    foreach(new i: Player)
    {
        if(PI[i][PLAYER_Admin] < 1) continue;
        if(PI[i][PLAYER_Admin] > 7) 
        {
            format(admins, sizeof(admins), "{7ad14b}%s | 7 уровень", PI[i][PLAYER_Name]);
        }
        else
        {
            format(admins, sizeof(admins), "{7ad14b}%s | %d уровень", PI[i][PLAYER_Name],  PI[i][PLAYER_Admin]);
        }
        SendClientMessage(playerid, COLOR_WHITE_L, admins);
    }
    return 1;
}

cmd:mute(playerid, params[])
{
    if(PI[playerid][PLAYER_Admin] < 1) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(sscanf(params, "dds[33]", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /mute [ID] [Время] [Причина]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрок не подключен");
    if(!PI[params[0]][PLAYER_Logged]) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрок еще не вошел!");
    if(PI[params[0]][PLAYER_Admin] > 0) return SendClientMessage(playerid, COLOR_WHITE_L, !"Нельзя мутить администрацию");
    if(strlen(params[1]) > 32) return SendClientMessage(playerid, COLOR_WHITE_L, !"Причина может быть не более 32-х символов");
    if(params[1] < 1 || params[1] > 300) return SendClientMessage(playerid, COLOR_WHITE_L, !"От 1 до 300 минут!");
    new str[144];
    PI[params[0]][PLAYER_Mute] = params[1] * 60;
    format(str, sizeof(str), "Администратор %s заглушил %s на %d %s. Причина: %s", PI[playerid][PLAYER_Name], PI[params[0]][PLAYER_Name], params[1], FormatedInt(params[1], "минуту", "минуты", "минут"), params[2]);
    SendClientMessageToAll(COLOR_ADM_L, str);
    format(str, sizeof(str), "UPDATE `accounts` SET `mute` = '%d' WHERE `id` = '%d'", PI[params[0]][PLAYER_Mute], PI[params[0]][PLAYER_ID]);
    mysql_tquery(dbHandle, str);
    return 1;
}

cmd:fly(playerid)
{
    if(PI[playerid][PLAYER_Admin] < 1) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    SetPlayerCamera(playerid, 1);
    return 1;
}

cmd:stopfly(playerid)
{
    if(PI[playerid][PLAYER_Admin] < 1) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    SetPlayerCamera(playerid, 0);
    return 1;
}

///////////////////////////////////////////////////[КОМАНДЫ ДЛЯ АДМИНИСТРАТОРА 2+ УРОВНЯ]////////////////////////////////////////////////////////////////////

cmd:warn(playerid, params[])
{
    if(PI[playerid][PLAYER_Admin] < 2) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(sscanf(params, "ds[33]", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /warn [ID] [Причина]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрок не подключен");
    if(!PI[params[0]][PLAYER_Logged]) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрок еще не вошел!");
    if(PI[params[0]][PLAYER_Admin] > 0) return SendClientMessage(playerid, COLOR_WHITE_L, !"Нельзя варнить администрацию");
    if(strlen(params[1]) > 32) return SendClientMessage(playerid, COLOR_WHITE_L, !"Причина может быть не более 32-х символов");
    if(GetPVarInt(playerid, "Warn") > gettime()) return SendClientMessage(playerid, COLOR_WHITE_L, !"Варнить можно не чаще, чем раз в 15 секунд!");
    if(PI[playerid][PLAYER_Admin] < 7) SetPVarInt(playerid, "Warn", gettime() + 15);
    new str[190];
    PI[params[0]][PLAYER_Warn]++;
    if(PI[params[0]][PLAYER_Warn] < 3)
    {
        if(PI[params[0]][PLAYER_WarnTime] > gettime())
        {
            PI[params[0]][PLAYER_WarnTime] += 259200; // 3 дня
        }
        else
        { 
            PI[params[0]][PLAYER_WarnTime] = gettime() + 259200; // 3 дня
        }
        format(str, sizeof(str), "UPDATE `accounts` SET `warn` = '%d', `warntime` = '%d' WHERE `id` = '%d'", PI[params[0]][PLAYER_Warn], PI[params[0]][PLAYER_WarnTime], PI[params[0]][PLAYER_ID]);
        mysql_tquery(dbHandle, str);
    }
    else
    {
        format(str, sizeof(str), "UPDATE `accounts` SET `warn` = '0', `warntime` = '0' WHERE `id` = '%d'", PI[params[0]][PLAYER_ID]);
        mysql_tquery(dbHandle, str);
        format(str, sizeof(str), "INSERT INTO `banlist` (`Name`, `Admin`, `UNIX`, `Reason`, `BanDate`) VALUES ('%s', '%s', '%d', '%s', '%d')", PI[params[0]][PLAYER_Name], PI[playerid][PLAYER_Name], gettime() + 86400 * 30, params[1], gettime());
        mysql_tquery(dbHandle, str);
    }
    format(str, sizeof(str), "Администратор %s выдал предупреждение игроку %s %d/3. Причина %s", PI[playerid][PLAYER_Name], PI[params[0]][PLAYER_Name], PI[params[0]][PLAYER_Warn], params[1]);
    SendClientMessageToAll(COLOR_ADM_L, str);
    GKick(params[0]);
    return 1;
}

cmd:unmute(playerid, params[])
{
    if(PI[playerid][PLAYER_Admin] < 2) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /unmute [ID]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрок не подключен");
    if(!PI[params[0]][PLAYER_Logged]) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрок еще не вошел!");
    if(PI[params[0]][PLAYER_Admin] > 0) return SendClientMessage(playerid, COLOR_WHITE_L, !"Нельзя раз-мутить администрацию");
    new str[144];
    PI[params[0]][PLAYER_Mute] = 0;
    format(str, sizeof(str), "Администратор %s снял бан чата игроку %s", PI[playerid][PLAYER_Name], PI[params[0]][PLAYER_Name]);
    SendClientMessageToAll(COLOR_ADM_L, str);
    format(str, sizeof(str), "UPDATE `accounts` SET `mute` = '0' WHERE `id` = '%d'", PI[params[0]][PLAYER_ID]);
    mysql_tquery(dbHandle, str);
    return 1;
}

cmd:spawn(playerid, params[])
{
    if(PI[playerid][PLAYER_Admin] < 2) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /spawn [ID]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрока с таким ID не существует");
    if(!PI[params[0]][PLAYER_Logged]) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрок еще не вошел");
    OnPlayerSpawn(params[0]);
    return 1;
}
alias:spawn("sp");

///////////////////////////////////////////////////[КОМАНДЫ ДЛЯ АДМИНИСТРАТОРА 3+ УРОВНЯ]////////////////////////////////////////////////////////////////////

cmd:ban(playerid, params[])
{
    if(PI[playerid][PLAYER_Admin] < 3) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(sscanf(params, "dds[33]", params[0], params[1], params[2])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /ban [ID] [Дни] [Причина]");
    if(params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE_L, !"Нельзя заблокировать себя");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрок не подключен");
    if(!PI[params[0]][PLAYER_Logged]) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрок еще не вошел");
    if(params[1] < 1) return SendClientMessage(playerid, COLOR_WHITE_L, !"Не менее 1 дня");
    if(params[1] > 30) return SendClientMessage(playerid, COLOR_WHITE_L, !"Не более 30 дней");
    if(strlen(params[2]) > 32) return SendClientMessage(playerid, COLOR_WHITE_L, !"Причина может быть не более 32-х символов");
    new string[200];
    switch(AntiBan(playerid, params[0], params[2]))
    {
        case 1:
        {
            format(string, sizeof(string), "<ADM> %s попытался заблокировать %s на %d %s. С причиной: \"%s\" и был снят системой", PI[playerid][PLAYER_Name], PI[params[0]][PLAYER_Name], params[1], FormatedInt(params[1], "день", "дня", "дней"), params[2]);
            SendAdmin(string, COLOR_RED_L);
            format(string, sizeof(string), "Время: %d", gettime());
            SendClientMessage(playerid, COLOR_WHITE_L, string);
            SendClientMessage(playerid, COLOR_WHITE_L, !"Если система сняла Вас ошибочно - сделайте скриншот");
            return 1;
        }
        case 2:
        {
            format(string, sizeof(string), "<ADM> %s попытался заблокировать %s на %d %s. С причиной: \"%s\" и был снят системой", PI[playerid][PLAYER_Name], PI[params[0]][PLAYER_Name], params[1], FormatedInt(params[1], "день", "дня", "дней"), params[2]);
            SendAdmin(string, COLOR_RED_L);
            format(string, sizeof(string), "Время: %d", gettime());
            SendClientMessage(playerid, COLOR_WHITE_L, string);
            SendClientMessage(playerid, COLOR_WHITE_L, !"Если система сняла Вас ошибочно - сделайте скриншот");
            return 1;
        }
    }
    new Unix = gettime() + 86400 * params[1];
    format(string, sizeof(string), "INSERT INTO `banlist` (`Name`, `Admin`, `UNIX`, `Reason`, `BanDate`) VALUES ('%s', '%s', '%d', '%s', '%d')", PI[params[0]][PLAYER_Name], PI[playerid][PLAYER_Name], Unix, params[2], gettime());
    mysql_tquery(dbHandle, string);
    format(string, sizeof(string), "Администратор %s заблокировал %s на %d %s. Причина: %s", 
    PI[playerid][PLAYER_Name], PI[params[0]][PLAYER_Name], params[1], FormatedInt(params[1], "день", "дня", "дней"), params[2]);
    SendClientMessageToAll(COLOR_ADM_L, string);
    GKick(params[0]);
    return 1;
}

cmd:setskin(playerid, params[])
{
    if(PI[playerid][PLAYER_Admin] < 4) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /setskin [ID игрока] [ID скина]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрока не существует");
    if(params[1] < 0 || params[1] > 311) return SendClientMessage(playerid, COLOR_WHITE_L, !"ID скинов от 0 до 311");
    if(!PI[params[0]][PLAYER_Logged]) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрок еще не вошел");
    SetPlayerSkin(params[0], params[1]);
    return 1;
}

///////////////////////////////////////////////////[КОМАНДЫ ДЛЯ АДМИНИСТРАТОРА 4+ УРОВНЯ]////////////////////////////////////////////////////////////////////

cmd:veh(playerid, params[])
{
    if(PI[playerid][PLAYER_Admin] < 4) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    new str[125];
    if(!sscanf(params, "ddd", params[0], params[1], params[2]))
    {
        if(params[0] < 400 || params[0] > 611) return SendClientMessage(playerid, COLOR_WHITE_L, !"ID транспорта от 400 до 611");
        if(params[1] < 0 || params[1] > 255 || params[2] < 0 || params[2] > 255) return SendClientMessage(playerid, COLOR_WHITE_L, !"ID цвета от 0 до 255");
        if(AVeh[playerid] != 0) DestroyVehicle(AVeh[playerid]);
        new Float:x, Float:y, Float:z, Float:a;
        GetPlayerTurn(playerid, x, y, z, 5, 180);
        AVeh[playerid] = CreateVehicle(params[0], x, y, z, a, params[1], params[2], 0, 0);
        LinkVehicleToInterior(AVeh[playerid], GetPlayerInterior(playerid));
        SetVehicleVirtualWorld(AVeh[playerid], GetPlayerVirtualWorld(playerid));
        if(PI[playerid][PLAYER_Sex] == 1) format(str, sizeof(str), ""COLOR_HAKI_S"<ADM> Администратор %s заспавнил %s", PI[playerid][PLAYER_Name], VehicleName[params[0]-400]);
        else format(str, sizeof(str), ""COLOR_HAKI_S"<ADM> Администратор %s заспавнила %s", PI[playerid][PLAYER_Name], VehicleName[params[0]-400]);
        SendAdmin(str, COLOR_GRAY_L);
    }
    else if(!sscanf(params, "k<vehiclemodel>dd", params[0], params[1], params[2]))
    {
        if(params[1] < 0 || params[1] > 255 || params[2] < 0 || params[2] > 255) return SendClientMessage(playerid, COLOR_WHITE_L, !"ID цвета от 0 до 255");
        if(AVeh[playerid] != 0) DestroyVehicle(AVeh[playerid]);
        new Float:x, Float:y, Float:z, Float:a;
        GetPlayerTurn(playerid, x, y, z, 5, 180);
        AVeh[playerid] = CreateVehicle(params[0], x, y, z, a, 1, 1, 0, 0);
        LinkVehicleToInterior(AVeh[playerid], GetPlayerInterior(playerid));
        SetVehicleVirtualWorld(AVeh[playerid], GetPlayerVirtualWorld(playerid));
        if(PI[playerid][PLAYER_Sex] == 1) format(str, sizeof(str), ""COLOR_HAKI_S"<ADM> Администратор %s заспавнил %s", PI[playerid][PLAYER_Name], VehicleName[params[0]-400]);
        else format(str, sizeof(str), ""COLOR_HAKI_S"<ADM> Администратор %s заспавнила %s", PI[playerid][PLAYER_Name], VehicleName[params[0]-400]);
        SendAdmin(str, COLOR_GRAY_L);
    }
    else return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /veh [ID/Имя] [ID цвета] [ID цвета]");
    ChangeVehicleColor(AVeh[playerid], params[1], params[2]);
    return 1;
}

cmd:unban(playerid, params[])
{
    if(PI[playerid][PLAYER_Admin] < 4) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(sscanf(params, "s[25]", params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /unban [Никнейм]");
    if(strlen(params[0]) < 2 || strlen(params[0]) > 24) return SendClientMessage(playerid, COLOR_WHITE_L, !"Введите Role Play никнейм");
    if(!IsRPNick(params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Введите Role Play никнейм");
    new string[100];
    format(string, sizeof(string), "SELECT * FROM `banlist` WHERE `Name` = '%s'", params[0]);
    mysql_tquery(dbHandle, string, "OnPlayerUnban", "ds", playerid, params[0]);
    return 1;
}

cmd:delveh(playerid)
{
    if(PI[playerid][PLAYER_Admin] < 4) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(AVeh[playerid] != 0) DestroyVehicle(AVeh[playerid]);
    AVeh[playerid] = 0;
    return 1;
}

cmd:fixveh(playerid)
{
    if(PI[playerid][PLAYER_Admin] < 4) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE_L, !"Можно использовать только в машине");
    SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
    SendClientMessage(playerid, COLOR_WHITE_L, !"Вы починили машину");
    return 1;
}
///////////////////////////////////////////////////[КОМАНДЫ ДЛЯ АДМИНИСТРАТОРА 5+ УРОВНЯ]////////////////////////////////////////////////////////////////////

cmd:tune(playerid)
{
    if(PI[playerid][PLAYER_Admin] < 5) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE_L, !"Можно использовать только в машине");
    ShowPlayerDialog(playerid, DIALOG_TUNE, DIALOG_STYLE_LIST, "Тюнинг", TuneName, "Выбрать", "Отмена");
    return 1;
}

cmd:atune(playerid, params[])
{
    if(PI[playerid][PLAYER_Admin] < 5) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, "Используйте /atune [ID детали]");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE_L, !"Можно использовать только в машине");
    AddVehicleComponent(GetPlayerVehicleID(playerid), params[0]);
    return 1;
}

cmd:paintjob(playerid, params[])
{
    if(PI[playerid][PLAYER_Admin] < 5) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, "Используйте /paintjob [ID paintjob]");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE_L, !"Можно использовать только в машине");
    ChangeVehiclePaintjob(GetPlayerVehicleID(playerid), params[0]);
    return 1;
}

cmd:weather(playerid, params[])
{
    if(PI[playerid][PLAYER_Admin] < 5) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, "Используйте /weather [ID погоды]");
    SetWeather(params[0]);
    return 1;
}

cmd:settime(playerid, params[])
{
    if(PI[playerid][PLAYER_Admin] < 5) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /settime [Часы ( 1 - 24)]");
    SetWorldTime(params[0]);
    return 1;
}

///////////////////////////////////////////////////[КОМАНДЫ ДЛЯ АДМИНИСТРАТОРА 6+ УРОВНЯ]////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////[КОМАНДЫ ДЛЯ АДМИНИСТРАТОРА 7+ УРОВНЯ]////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////[КОМАНДЫ ДЛЯ АДМИНИСТРАТОРА 8+ УРОВНЯ]////////////////////////////////////////////////////////////////////

cmd:makeadmin(playerid, params[])
{
    if(strcmp(PI[playerid][PLAYER_Name], "Marshall_Mathers") && PI[playerid][PLAYER_Admin] < 8 && strcmp(PI[playerid][PLAYER_Name], "Folinq_Weard")) return UnknownCommand(playerid);
    if(!PI[playerid][PLAYER_AdminLogged]) return NotLoggedInAdmin(playerid);
    if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Используйте /makeadmin [ID] [Ур.]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрока с таким ID не существует");
    if(!PI[params[0]][PLAYER_Logged]) return SendClientMessage(playerid, COLOR_WHITE_L, !"Игрок еще не вошел");
    if(params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE_L, !"Нельзя изменять свой уровень администрирования");
    if(params[1] > 7 || params[1] < 0) return SendClientMessage(playerid, COLOR_WHITE_L, !"От 0 до 7 уровня");
    PI[params[0]][PLAYER_Admin] = params[1];
    new string[120];
    format(string, sizeof(string), "UPDATE `accounts` SET `admin` = '%d' WHERE `id` = '%d'", PI[params[0]][PLAYER_Admin], PI[params[0]][PLAYER_ID]);
    mysql_tquery(dbHandle, string);
    return 1;
}

//////////////////////////////////////////////////////[ТЕСТОВЫЕ]//////////////////////////////////////////////////////////////////////////////////////////////////

cmd:int(playerid)
{
    FreezePlayer(playerid, 3000);
    SetPlayerPos(playerid, 1079.920043, 2279.250000, 1121.699951);
    return 1;
}

stock AntiBan(playerid, targetid, reason[])
{
    //Админ
    if(PI[playerid][PLAYER_Admin] < 8 && PI[targetid][PLAYER_Admin] > 7) return 1;
 
    //Причина
    return 0;
}

callback:LoadAcc(playerid)
{
    cache_get_value_name_int(0, "id", PI[playerid][PLAYER_ID]);
    cache_get_value_name_int(0, "admin", PI[playerid][PLAYER_Admin]);
    cache_get_value_name(0, "adminspass", PI[playerid][PLAYER_AdminPassword], 17);
    cache_get_value_name_int(0, "money", PI[playerid][PLAYER_Money]);
    cache_get_value_name_int(0, "skin", PI[playerid][PLAYER_Skin]);
    cache_get_value_name_int(0, "sex", PI[playerid][PLAYER_Sex]);
    cache_get_value_name_int(0, "money", PI[playerid][PLAYER_Money]);
    cache_get_value_name_int(0, "warn", PI[playerid][PLAYER_Warn]);
    cache_get_value_name_int(0, "warntime", PI[playerid][PLAYER_WarnTime]);
    cache_get_value_name_int(0, "mute", PI[playerid][PLAYER_Mute]);
    cache_get_value_name_int(0, "donate", PI[playerid][PLAYER_Donate]);
    new qString[110];
    format(qString, sizeof(qString), "SELECT * FROM `banlist` WHERE `name` = '%s'", PI[playerid][PLAYER_Name]);
    mysql_tquery(dbHandle, qString, "OnPlayerFindInBanList", "d", playerid);
    return 1;
}

callback:OnPlayerUnban(playerid, const name[])
{
    new rows = cache_num_rows();
    if(!rows) return SendClientMessage(playerid, COLOR_WHITE_L, !"Аккаунт не заблокирован");
    new string[100];
    format(string, sizeof(string), "DELETE FROM `banlist` WHERE `Name` = '%s'", name);
    mysql_tquery(dbHandle, string);
    return SendClientMessage(playerid, COLOR_WHITE_L, !"Аккаунт разблокирован");
}

callback:OnPlayerFindInBanList(playerid)
{
    new rows = cache_num_rows();
    new string[300];
    if(!rows)
    {
        if(PI[playerid][PLAYER_WarnTime] > gettime())
        {
            PI[playerid][PLAYER_Warn] = 0;
            PI[playerid][PLAYER_WarnTime] = 0;
            format(string, sizeof(string), "UPDATE `accounts` SET `warn` = '0', `warntime` = '0' WHERE `id` = '%d'", PI[playerid][PLAYER_ID]);
            mysql_tquery(dbHandle, string);
        }
        format(string, sizeof(string), "SELECT * FROM `accounts` WHERE `name` = '%s'", PI[playerid][PLAYER_Name]);
        mysql_tquery(dbHandle, string, "OnPlayerLogin", "d", playerid);
    }   
    else
    {
        new Admin[25], BName[25], Reason[33], UNIX, BanDate;
        cache_get_value_name(0, "Admin", Admin, 25);
        cache_get_value_name(0, "Name", BName, 25);
        cache_get_value_name(0, "Reason", Reason, 33);
        cache_get_value_name_int(0, "UNIX", UNIX);
        cache_get_value_name_int(0, "BanDate", BanDate);
        new Ostatok = (gettime() / 86000) - (UNIX / 86000);
        format(string, sizeof(string), 
            "{FFFFFF}Вы получили блокировку аккаунта\n\n\
            {FCB103}Ник: {4dc242}%s\n\
            {FCB103}Ник Администратора: {4dc242}%s\n\
            {FCB103}Причина: {4dc242}%s\n\
            {FCB103}Дата блокировки: {4dc242}%s\n\
            {FCB103}Осталось: {4dc242}%d %s\
            ", BName, Admin, Reason, date("%dd.%mm.%yyyy в %hh:%ii:%ss", BanDate - 46800), -Ostatok, FormatedInt(-Ostatok, "День", "Дня", "Дней"));
        ShowPlayerDialog(playerid, DIALOG_NULL, DIALOG_STYLE_MSGBOX, !"Блокировка", string, !"Ок", "");
        return GKick(playerid);
    }
    return 1;
}


callback:OnPlayerLogin(playerid)
{
    PI[playerid][PLAYER_Logged] = true;
    DeletePVar(playerid, "BadAttempt");
    TogglePlayerSpectating(playerid, 0);
    SpawnPlayer(playerid);
    new string[125];
    format(string, sizeof(string), "UPDATE `accounts` SET `lastip` = '%s' WHERE `id` = '%d'", PI[playerid][PLAYER_IP], PI[playerid][PLAYER_ID]);
    mysql_tquery(dbHandle, string);
    if(PI[playerid][PLAYER_Admin] > 0) 
    {
        format(string, sizeof(string), "Вы вошли как %s", AdminLevelName[PI[playerid][PLAYER_Admin]-1]);
        return SendClientMessage(playerid, 0xFFFFFFFF, string);
    }
    for(new i; i < sizeof(TestersNames); i++)
    {
        if(strcmp(PI[playerid][PLAYER_Name], TestersNames[i])) continue;
        format(string, sizeof(string), "Добро пожаловать на сервер, %s, Вы авторизовались как тестер", PI[playerid][PLAYER_Name]);
        SendClientMessage(playerid, COLOR_GREEN_L, string);
        break;
    }
    return 1;
}

callback:CreateAcc(playerid, const password[])
{
    new qString[200], skin, rows = cache_num_rows();
    if(rows) return GKick(playerid), SendClientMessage(playerid, -1, !"Данный аккаунт уже зарегистрирован");
    if(PI[playerid][PLAYER_Sex] == 1)
    {
        switch(random(3))
        {
            case 0: skin = 30;
            case 1: skin = 48;
            case 2: skin = 180;
        }
    }
    else
    {
        switch(random(3))
        {
            case 0: skin = 169;
            case 1: skin = 226;
            case 2: skin = 193;
        }
    }
    PI[playerid][PLAYER_Skin] = skin;
    format(qString, sizeof(qString), "INSERT INTO `accounts` (`name`, `password`, `skin`, `money`, `sex`, `regip`, `lastip`) VALUES ('%s', '%s', '%d', '%d', '%d', '%s', '%s')", PI[playerid][PLAYER_Name], password, PI[playerid][PLAYER_Skin], 100, PI[playerid][PLAYER_Sex], PI[playerid][PLAYER_IP], PI[playerid][PLAYER_IP]);
    mysql_tquery(dbHandle, qString, "LoadAccID", "d", playerid);
    TogglePlayerSpectating(playerid, 0);
    PI[playerid][PLAYER_Logged] = 1;
    SpawnPlayer(playerid);
    TempPlayerPassword[playerid][0] = EOS;
    for(new i; i < sizeof(TestersNames); i++)
    {
        if(strcmp(PI[playerid][PLAYER_Name], TestersNames[i])) continue;
        new string[125];
        format(string, sizeof(string), "Добро пожаловать на сервер, %s, Вы авторизовались как тестер", PI[playerid][PLAYER_Name]);
        SendClientMessage(playerid, COLOR_GREEN_L, string);
        break;
    }
    return 1;
}

stock GiveMoney(playerid, money)
{
    if(money < 1) return 1;
    new str[144];
    I[playerid][PLAYER_Money] += money;
    format(str, sizeof(str), "UPDATE `accounts` SET `money` = '%d' WHERE `id` = '%d'", PI[playerid][PLAYER_Money], PI[playerid][PLAYER_ID]);
    mysql_tquery(dbHandle, str);
    return 1;
}

stock TakeMoney(playerid, money)
{
    if(money > -1) return 1;
    new str[144];
    PI[playerid][PLAYER_Money] -= money;
    format(str, sizeof(str), "UPDATE `accounts` SET `money` = '%d' WHERE `id` = '%d'", PI[playerid][PLAYER_Money], PI[playerid][PLAYER_ID]);
    mysql_tquery(dbHandle, str);
    return 1;
}

stock GiveDonate(playerid, donate)
{
    new str[144];
    PI[playerid][PLAYER_Donate] += donate;
    format(str, sizeof(str), "UPDATE `accounts` SET `donate` = '%d' WHERE `id` = '%d'", PI[playerid][PLAYER_Donate], PI[playerid][PLAYER_ID]);
    mysql_tquery(dbHandle, str);
    return 1;
}

stock TakeDonate(playerid, donate)
{
    new str[144];
    PI[playerid][PLAYER_Donate] = PI[playerid][PLAYER_Donate] - donate;
    format(str, sizeof(str), "UPDATE `accounts` SET `donate` = '%d' WHERE `id` = '%d'", PI[playerid][PLAYER_Donate], PI[playerid][PLAYER_ID]);
    mysql_tquery(dbHandle, str);
    return 1;
}

callback:LoadAccID(playerid) return cache_get_value_name_int(0, "id", PI[playerid][PLAYER_ID]);

stock IsRPNick(const name[])
{
    static i, n;
    if('A' <= name[0] <= 'Z' && 'a' <= name[1] <= 'z')
    {
        for(i = 1, n = 0;;)
        {
            switch(name[++i])
            {
                case 'a'..'z': continue;
                case '_':
                {
                    if (n++, 'A' <= name[++i] <= 'Z' && 'a' <= name[++i] <= 'z') continue;
                    else break;
                }
                case '\0': return (i >= 4 && n == 1);
                default: return false;
            }
        }
    }
    return false;
}

stock ProxDetector(Float:radi, playerid, const string[],col1,col2,col3,col4,col5)
{
    if(IsPlayerConnected(playerid))
    {
        new Float:posx;new Float:posy;new Float:posz;new Float:oldposx;new Float:oldposy;new Float:oldposz;new Float:tempposx;new Float:tempposy;new Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        foreach(new i: Player)
        {
            if(IsPlayerConnected(i))
            {
                if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
                {
                    GetPlayerPos(i, posx, posy, posz);
                    tempposx = (oldposx -posx);
                    tempposy = (oldposy -posy);
                    tempposz = (oldposz -posz);
                    if(((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16))) SendClientMessage(i, col1, string);
                    else if(((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8))) SendClientMessage(i, col2, string);
                    else if(((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4))) SendClientMessage(i, col3, string);
                    else if(((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2))) SendClientMessage(i, col4, string);
                    else if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) SendClientMessage(i, col5, string);
                }
            }
        }
    }
    return 1;
}