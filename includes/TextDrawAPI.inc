/* 

	TextDraw API
	for BrialliantRolePlay
	Dev: Masson (Folinq_Weard)

*/


#if defined TEXTDRAW_API
	#endinput

#define TEXTDRAW_API

#if !defined MAX_PLAYERS
	#error Define MAX_PLAYERS first

#define TEXTDRAW_API_MAX_TEXTDRAWS_ON_PLAYER	10		// можно менять
#define TEXTDRAW_API_MAX_TEXTDRAWS_LOAD_TIME	1000	// менять не желательно
#define TEXTDRAW_API_MAX_TEXTDRAW_STRING		256


enum TEXTDRAW_API_TEXTDRAW_DATA {
	Text:TEXTDRAW_API_ID,			// id текстдрава по Text типу
	TEXTDRAW_API_COLOR,				// 16-ричный цвет textdraw
	TEXTDRAW_API_BOXCOLOR,			// 16-ричный цвет BoxColor
	TEXTDRAW_API_BACKGROUNDCOLOR,	// 16-ричный цвеь BackgroundColor
	TEXTDRAW_API_ALIGNMENT,			// Alignment 1/0
	TEXTDRAW_API_FONT,				// Шрифт
	Float:TEXTDRAW_API_LETTERSIZE[2], // 0 - по x, 1 - по y
	Float:TEXTDRAW_API_TEXTSIZE[2],	// 0 - по x, 1 - по y
	TEXTDRAW_API_SETOUTLINE,		// Окантовка 1/0
	TEXTDRAW_API_SETSHADOW,			// Тень	1/0
	TEXTDRAW_API_SETPROPORTIONAL,	// Пропорциональность 1/0
	TEXTDRAW_API_USEBOX,			// 
	TEXTDRAW_API_SETSTRING[TEXTDRAW_API_MAX_TEXTDRAW_STRING], // Текст
	Float:TEXTDRAW_API_POS[2]		// 0 - по x, 1 - по y
};

new TEXTDRAW_API_DATA [MAX_PLAYERS * TEXTDRAW_API_MAX_TEXTDRAWS_ON_PLAYER] [TEXTDRAW_API_TEXTDRAW_DATA];
new TEXTDRAW_API_CREATED;


/* 
	Части стандартной настройки текстдрава используются, если определенные данные не были указаны
*/
enum const TEXTDRAW_API_STANDART_PRESET {
	Text:TEXTDRAW_API_ID 			= Text:-1,
	TEXTDRAW_API_COLOR 				= 0x000000FF, 
	TEXTDRAW_API_BOXCOLOR			= 0xFFFFFFFF,
	TEXTDRAW_API_BACKGROUNDCOLOR	= 0xFFFFFFFF,
	TEXTDRAW_API_ALIGNMENT			= 2,
	TEXTDRAW_API_FONT				= 2,
	TEXTDRAW_API_LETTERSIZE[2]		= {2.0, 4.0},
	TEXTDRAW_API_TEXTSIZE[2]		= {2.0, 3.0},
	TEXTDRAW_API_SETOUTLINE			= 1,
	TEXTDRAW_API_SETSHADOW			= 1,
	TEXTDRAW_API_SETPROPORTIONAL	= 1,
	TEXTDRAW_API_USEBOX				= 1,
	TEXTDRAW_API_SETSTRING[]		= "",
	TEXTDRAW_API_POS[2]				= {0.0, 0.0}
};



#define initTextDraw (%0)	TEXTDRAW_API_INIT_TEXTDRAW(%0)
TEXTDRAW_API_INIT_TEXTDRAW(TEXTDRAW_API_PRESET[TEXTDRAW_API_TEXTDRAW_DATA]) {

	new 
		Float:tmp_x, 
		Float:tmp_y,
		tmp_Text[TEXTDRAW_API_MAX_TEXTDRAW_STRING];

	if(!TEXTDRAW_API_PRESET[TEXTDRAW_API_POS][0]) tmp_x = TEXTDRAW_API_STANDART_PRESET[TEXTDRAW_API_POS][0]; 
	else tmp_x = TEXTDRAW_API_PRESET[TEXTDRAW_API_POS][0];

	if(!TEXTDRAW_API_PRESET[TEXTDRAW_API_POS][1]) tmp_y = TEXTDRAW_API_STANDART_PRESET[TEXTDRAW_API_POS][1]; 
	else tmp_y = TEXTDRAW_API_PRESET[TEXTDRAW_API_POS][1];

	if(!TEXTDRAW_API_PRESET[TEXTDRAW_API_SETSTRING]) tmp_Text = TEXTDRAW_API_STANDART_PRESET[TEXTDRAW_API_SETSTRING];
	else tmp_Text = TEXTDRAW_API_PRESET[TEXTDRAW_API_SETSTRING];

	TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID] = TextDrawCreate(tmp_x, tmp_y, tmp_Text);

	if(!TEXTDRAW_API_PRESET[TEXTDRAW_API_COLOR]) TextDrawColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_STANDART_PRESET[TEXTDRAW_API_COLOR]);
	else  TextDrawColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_PRESET[TEXTDRAW_API_COLOR]);

	if(!TEXTDRAW_API_PRESET[TEXTDRAW_BOX_COLOR]) TextDrawBoxColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_STANDART_PRESET[TEXTDRAW_API_BOXCOLOR]);
	else  TextDrawColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_PRESET[TEXTDRAW_API_BOXCOLOR]);

	if(!TEXTDRAW_API_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]) TextDrawBackgroundColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_STANDART_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]);
	else  TextDrawColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]);

	if(!TEXTDRAW_API_PRESET[TEXTDRAW_API_ALIGNMENT]) TextDrawAlignment(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_STANDART_PRESET[TEXTDRAW_API_ALIGNMENT]);
	else  TextDrawColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_PRESET[TEXTDRAW_API_ALIGNMENT]);

	if(!TEXTDRAW_API_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]) TextDrawColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_STANDART_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]);
	else  TextDrawColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]);

	if(!TEXTDRAW_API_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]) TextDrawColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_STANDART_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]);
	else  TextDrawColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]);

	if(!TEXTDRAW_API_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]) TextDrawColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_STANDART_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]);
	else  TextDrawColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]);

	if(!TEXTDRAW_API_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]) TextDrawColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_STANDART_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]);
	else  TextDrawColor(TEXTDRAW_API_DATA[TEXTDRAW_API_CREATED][TEXTDRAW_API_ID], TEXTDRAW_API_PRESET[TEXTDRAW_API_BACKGROUNDCOLOR]);
}




#if defined TEXTDRAW_API_USE_DIG
forward TEXTDRAW_API_DIG_ON_TEXTDRAW_SHOWN(playerid, id);
forward TEXTDRAW_API_DIG_ON_TEXTDRAW_EDIT(playerid, id);
forward TEXTDRAW_API_DIG_ON_TEXTDRAW_HIDDEN(playerid, id);
#else
forward TEXTDRAW_API_ON_TEXTDRAW_SHOWN(playerid, Text:id);
forward TEXTDRAW_API_ON_TEXTDRAW_EDIT(playerid, Text:id);
forward TEXTDRAW_API_ON_TEXTDRAW_HIDDEN(playerid, Text:id);
#endif


